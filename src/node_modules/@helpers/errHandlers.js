
//return error msg
export const getErrors = (errors) => {
    if (errors.length > 0) {
        var errorMgs = "";
        for (var i = 0; i < errors.length; i++) {
            if (                
                errors[i].validatorKey == "not_unique"
            ) {
                errorMgs +=
                    "This " + errors[i].path + " is taken. Please choose a different one." +
                    "<br>";
            } else if (
                errors[i].path == "email" &&
                errors[i].validatorKey == "not_unique"
            ) {
                errorMgs += "Email already exist." + "<br>";
            } else {
                errorMgs += errors[i].message + "<br>";
            }
        }
    } else {
        errorMgs = "Internal error, try again or contact support.";
    }
    return errorMgs;
}

export function sendErr(res, err) {
    let errMsg = errHandler(err)
    let results = { status: 400, errors: errMsg }
    return res.end(JSON.stringify(results));
}


export const errHandler = (err) => {
    if (err.errors) {
        console.log("Code Error: ", err)
        return err.errors;
    } else {
        console.log(err)
        var newErr = [{ message: err }]
        return newErr;
    }
}