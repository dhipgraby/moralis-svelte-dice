Moralis.Cloud.define("userGames",async function(request) {

  const query = new Parse.Query("PlayRequest")
  
  const pipeline = [       
     { match: { user: request.params.user } },
     { lookup: {
      from: "RandomNumbers",
      localField: "queryId",
      foreignField: "queryId",
      as: "gameRow"
    }},
 
  ];
  
  const result = await query.aggregate(pipeline,{useMasterKey: true});
  return result
}) 


Moralis.Cloud.define("userDeposits",async function(request) {

const query = new Parse.Query("deposits")
query.equalTo("user",request.params.user)

const result = await query.find()
return result
})

Moralis.Cloud.define("totalDeposited",async function(request) {

const query = new Parse.Query("deposits")
query.equalTo("user",request.params.user)

const pipeline = [
  {
  group: {
     objectId:null,
     total_sum: { $sum: { $toLong: "$fundAmount" }  },
    }
  }
];

const result = await query.aggregate(pipeline,{useMasterKey: true});
return result
})