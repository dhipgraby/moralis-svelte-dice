
import { getEth,getWei } from "@helpers/main";
import { alertParser } from "@helpers/messageParser";
import { alertTrigger } from "@storage/global";
import { contractInfo } from "@storage/contract";


let web3, contractInstance;

export const fundContract = async () => {

    contractInstance = (await contractInfo()).contractInstance
    
    try {
        await contractInstance.methods
            .funding()
            .send({ value: 1000000000000000000 });

    } catch (err) {
        console.log(err);
        alertTrigger.update(value =>
            value = alertParser(err.message, 'warning')
        )

    }
};

export async function addressBalance(address) {
    let contractData = await contractInfo()  
    web3 = await contractData.webConn
    try {
        let balance = await web3.eth.getBalance(address);
        balance = await getEth(balance);
        return balance;
    } catch (err) {
        console.log(err);
        alertTrigger.update(value =>
            value = alertParser(err.message, 'warning')
        )
    }
}


export const placeBet = async (face,amount) => {
  
    try {
        let contractData = await contractInfo()   
        web3 = await contractData.webConn
        contractInstance = await contractData.contractInstance
        
       let event = await contractInstance.methods.play(face).send({ value:  await getWei(amount) })
       var gameId = await event.events.playGame.returnValues.id
        
        alertTrigger.update(value =>
            value = alertParser('Bet placed for game Id: ' + gameId, 'info')
        )
        
    } catch (err) {
        console.log(err)
        alertTrigger.update(value =>
            value = alertParser(err.message, 'warning')
        )
    }

}