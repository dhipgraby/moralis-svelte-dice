import { sequelize } from '@models/database/squalized'
const { DataTypes, Model, Sequelize } = require('sequelize');
const sha256 = require('sha256')
export const encription_key = "encode_key_7430455d242948729bba1279d80bc905039b27bc8ca5a11a32c00ce46387ba28"

export class User extends Model { }

User.init({
	// Model attributes are defined here
	id:{
		type: DataTypes.INTEGER,
		autoIncrement : true,
	    unique:true 
	},
	username: {
		type: DataTypes.STRING,
		allowNull: false,
		unique: true,		
		validate: {	
			notNull: {
				msg: 'Please enter a username'
			},
			minlength(value){
              if(value.length < 4){
				throw new Error("Name is too short");
			  }
			},
		}
	},
	password: {
		type: DataTypes.STRING,
		allowNull: false,
		validate: {		
			 notNull: {
				msg: 'Please enter a password'
			}
		},	
		set(value) {		
			this.setDataValue('password', sha256(value + encription_key));
		}		
	},
	passwordVal: {
		type: DataTypes.VIRTUAL,
		allowNull: false,
		validate: {	
		     minlength(value){
				if(value.length < 4){
					throw new Error("Passowrd is too short");
				  } else if(value.length > 20){
					throw new Error("Passowrd is too long");
				  }
			 },			
		},	
		
	},
	passwordConfirm: { 
		type: DataTypes.VIRTUAL,
		allowNull: false,
		validate: {	
		     matches(){
				if(this.passwordVal != this.passwordConfirm){
					console.log(this.passwordVal + " | " + this.passwordConfirm)
					throw new Error("Password not match");
				}
			 }
		},			
	},
	user_id: {
		type: DataTypes.UUID,
		allowNull: false,
		primaryKey: true,
		defaultValue: DataTypes.UUIDV4,
	},
	email: {
		type: DataTypes.STRING,
		unique: true,
		allowNull: false,
		validate: {	
			isEmail: {			
				msg: 'Invalid email'
			},
			notNull: {
				msg: 'Please enter a email'
			}		
		}
	},
	createdAt:{
		type: DataTypes.DATE,		
		allowNull: false,		
		defaultValue: Sequelize.NOW,
	},
	updatedAt:{
		type: DataTypes.DATE,		
		allowNull: true,		
	},
	status: {
		type: DataTypes.INTEGER,
		defaultValue: 2,
		allowNull: false,		
	}
}, {
	// Other model options go here
	sequelize,
	modelName: 'users' // We need to choose the model name
});

