
import { Render } from '@factory/Render'

const defaultDNA = {
    "headColor" : 10,
    "mouthColor" : 13,
    "eyesColor" : 96,
    "earsColor" : 10,
    //Cattributes
    "eyesShape" : 1,
    "decorationPattern" : 1,
    "decorationMidColor" : 13,
    "decorationSidesColor" : 13,
    "animation" : 0,
    "lastNum" : 1
    }
    
export const defaultDragon = {
    id: "",
    dna: defaultDNA,
    gen: "0"
}

export class Factory extends Render {

    getDefaultKittie() {
        try {
            this.render(defaultCat)
            this.updateSliders(defaultCat.dna)
        }
        catch (error) {
            console.log(`Error In getDefaultKittie(): ${error}`)
        }
    }


    getRandomKittie() {
        try {
            const randomCat = {
                id: "",
                gen: "",
                dna: {
                    "headColor": getRandomIntegerBetween(10, 98),
                    "mouthColor": getRandomIntegerBetween(10, 98),
                    "eyesColor": getRandomIntegerBetween(10, 98),
                    "earsColor": getRandomIntegerBetween(10, 98),
                    //Cattributes
                    "eyesShape": getRandomIntegerBetween(0, 9),
                    "decorationPattern": getRandomIntegerBetween(0, 9),
                    "decorationMidColor": getRandomIntegerBetween(10, 98),
                    "decorationSidesColor": getRandomIntegerBetween(10, 98),
                    "animation": getRandomIntegerBetween(0, 9),
                    "lastNum": getRandomIntegerBetween(0, 9)
                }
            }

            this.render(randomCat)
            this.updateSliders(randomCat.dna)
        }
        catch (error) {
            console.log(`Error In getRandomKittie(): ${error}`)
        }
    }

}


function getRandomIntegerBetween(low, high){
    try {
      if (low<0) throw "Error: Only supports positive integers - low is negative!"
      if (low>high) throw "Error: low is greater than high!"
  
      const rangeInclusive = high - low + 1 
      const RandomValue = Math.floor(Math.random() * rangeInclusive) + low
  
      return RandomValue
    }
    catch(error) {
      throw(`In getRandomIntegerBetween(${low}, ${high}): ${error}`)
    }
  }