import { writable } from 'svelte/store';
import { contractsAbi } from "@contracts/contractsAbi";
//old
// 0xAc150fa7889E4FCEc6348a2BE4a1A50a9b0aA8aC
export const dragonContract = "0xA959385EA23dFF9DaA79cb5F95Baf3398EBc8EAE";
//old
// 0x796796e9C27Cf75d28C86560f27DBf1c96a796aB
export const marketplaceAddress = "0x2Ea84C95C5B16Fa42254EB195Ef72d8E8D015a9a";
export const balances = writable({ contract: 0,user: 0 });
export const contractInfo = async () => {
    
    const web3 = await Moralis.Web3.enable();
    let account = web3.currentProvider.selectedAddress;

    let dragon_instance = new web3.eth.Contract(contractsAbi.dragonToken, dragonContract, {
        from: account,
    });

    let marketplace_instance = new web3.eth.Contract(contractsAbi.marketplace, marketplaceAddress, {
        from: account,
    });

    let interfaces = {
        dragon:dragon_instance,
        marketplace: marketplace_instance
    }

    let address = {
        dragon:dragonContract,
        marketplace: marketplaceAddress
    }
    
    let contractData = {              
        address:address,
        account: account,
        interfaces : interfaces
    } 
    return contractData

}

export const updateBalances = async (dappBalance,userBalance) => {

    balances.update(value =>{
        value = { contract: dappBalance,user: userBalance }      
        return value
    }  )  

}